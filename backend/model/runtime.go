// Code generated by ent, DO NOT EDIT.

package model

import (
	"jv/team-tone-tuner/model/bfianswer"
	"jv/team-tone-tuner/model/bfiquestion"
	"jv/team-tone-tuner/model/bfireport"
	"jv/team-tone-tuner/model/course"
	"jv/team-tone-tuner/model/group"
	"jv/team-tone-tuner/model/grouprun"
	"jv/team-tone-tuner/model/user"
	"jv/team-tone-tuner/schema"
	"time"

	"github.com/google/uuid"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	bfianswerMixin := schema.BfiAnswer{}.Mixin()
	bfianswerMixinFields0 := bfianswerMixin[0].Fields()
	_ = bfianswerMixinFields0
	bfianswerFields := schema.BfiAnswer{}.Fields()
	_ = bfianswerFields
	// bfianswerDescCreatedAt is the schema descriptor for created_at field.
	bfianswerDescCreatedAt := bfianswerMixinFields0[1].Descriptor()
	// bfianswer.DefaultCreatedAt holds the default value on creation for the created_at field.
	bfianswer.DefaultCreatedAt = bfianswerDescCreatedAt.Default.(func() time.Time)
	// bfianswerDescUpdatedAt is the schema descriptor for updated_at field.
	bfianswerDescUpdatedAt := bfianswerMixinFields0[2].Descriptor()
	// bfianswer.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	bfianswer.DefaultUpdatedAt = bfianswerDescUpdatedAt.Default.(func() time.Time)
	// bfianswer.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	bfianswer.UpdateDefaultUpdatedAt = bfianswerDescUpdatedAt.UpdateDefault.(func() time.Time)
	// bfianswerDescValue is the schema descriptor for value field.
	bfianswerDescValue := bfianswerFields[0].Descriptor()
	// bfianswer.ValueValidator is a validator for the "value" field. It is called by the builders before save.
	bfianswer.ValueValidator = func() func(int) error {
		validators := bfianswerDescValue.Validators
		fns := [...]func(int) error{
			validators[0].(func(int) error),
			validators[1].(func(int) error),
		}
		return func(value int) error {
			for _, fn := range fns {
				if err := fn(value); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// bfianswerDescID is the schema descriptor for id field.
	bfianswerDescID := bfianswerMixinFields0[0].Descriptor()
	// bfianswer.DefaultID holds the default value on creation for the id field.
	bfianswer.DefaultID = bfianswerDescID.Default.(func() uuid.UUID)
	bfiquestionMixin := schema.BfiQuestion{}.Mixin()
	bfiquestionMixinFields0 := bfiquestionMixin[0].Fields()
	_ = bfiquestionMixinFields0
	bfiquestionFields := schema.BfiQuestion{}.Fields()
	_ = bfiquestionFields
	// bfiquestionDescCreatedAt is the schema descriptor for created_at field.
	bfiquestionDescCreatedAt := bfiquestionMixinFields0[1].Descriptor()
	// bfiquestion.DefaultCreatedAt holds the default value on creation for the created_at field.
	bfiquestion.DefaultCreatedAt = bfiquestionDescCreatedAt.Default.(func() time.Time)
	// bfiquestionDescUpdatedAt is the schema descriptor for updated_at field.
	bfiquestionDescUpdatedAt := bfiquestionMixinFields0[2].Descriptor()
	// bfiquestion.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	bfiquestion.DefaultUpdatedAt = bfiquestionDescUpdatedAt.Default.(func() time.Time)
	// bfiquestion.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	bfiquestion.UpdateDefaultUpdatedAt = bfiquestionDescUpdatedAt.UpdateDefault.(func() time.Time)
	// bfiquestionDescQuestiono is the schema descriptor for questiono field.
	bfiquestionDescQuestiono := bfiquestionFields[0].Descriptor()
	// bfiquestion.QuestionoValidator is a validator for the "questiono" field. It is called by the builders before save.
	bfiquestion.QuestionoValidator = bfiquestionDescQuestiono.Validators[0].(func(string) error)
	// bfiquestionDescFacet is the schema descriptor for facet field.
	bfiquestionDescFacet := bfiquestionFields[1].Descriptor()
	// bfiquestion.FacetValidator is a validator for the "facet" field. It is called by the builders before save.
	bfiquestion.FacetValidator = bfiquestionDescFacet.Validators[0].(func(string) error)
	// bfiquestionDescAlpha is the schema descriptor for alpha field.
	bfiquestionDescAlpha := bfiquestionFields[4].Descriptor()
	// bfiquestion.AlphaValidator is a validator for the "alpha" field. It is called by the builders before save.
	bfiquestion.AlphaValidator = func() func(float64) error {
		validators := bfiquestionDescAlpha.Validators
		fns := [...]func(float64) error{
			validators[0].(func(float64) error),
			validators[1].(func(float64) error),
			validators[2].(func(float64) error),
		}
		return func(alpha float64) error {
			for _, fn := range fns {
				if err := fn(alpha); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// bfiquestionDescID is the schema descriptor for id field.
	bfiquestionDescID := bfiquestionMixinFields0[0].Descriptor()
	// bfiquestion.DefaultID holds the default value on creation for the id field.
	bfiquestion.DefaultID = bfiquestionDescID.Default.(func() uuid.UUID)
	bfireportMixin := schema.BfiReport{}.Mixin()
	bfireportMixinFields0 := bfireportMixin[0].Fields()
	_ = bfireportMixinFields0
	bfireportFields := schema.BfiReport{}.Fields()
	_ = bfireportFields
	// bfireportDescCreatedAt is the schema descriptor for created_at field.
	bfireportDescCreatedAt := bfireportMixinFields0[1].Descriptor()
	// bfireport.DefaultCreatedAt holds the default value on creation for the created_at field.
	bfireport.DefaultCreatedAt = bfireportDescCreatedAt.Default.(func() time.Time)
	// bfireportDescUpdatedAt is the schema descriptor for updated_at field.
	bfireportDescUpdatedAt := bfireportMixinFields0[2].Descriptor()
	// bfireport.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	bfireport.DefaultUpdatedAt = bfireportDescUpdatedAt.Default.(func() time.Time)
	// bfireport.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	bfireport.UpdateDefaultUpdatedAt = bfireportDescUpdatedAt.UpdateDefault.(func() time.Time)
	// bfireportDescID is the schema descriptor for id field.
	bfireportDescID := bfireportMixinFields0[0].Descriptor()
	// bfireport.DefaultID holds the default value on creation for the id field.
	bfireport.DefaultID = bfireportDescID.Default.(func() uuid.UUID)
	courseMixin := schema.Course{}.Mixin()
	courseMixinFields0 := courseMixin[0].Fields()
	_ = courseMixinFields0
	courseFields := schema.Course{}.Fields()
	_ = courseFields
	// courseDescCreatedAt is the schema descriptor for created_at field.
	courseDescCreatedAt := courseMixinFields0[1].Descriptor()
	// course.DefaultCreatedAt holds the default value on creation for the created_at field.
	course.DefaultCreatedAt = courseDescCreatedAt.Default.(func() time.Time)
	// courseDescUpdatedAt is the schema descriptor for updated_at field.
	courseDescUpdatedAt := courseMixinFields0[2].Descriptor()
	// course.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	course.DefaultUpdatedAt = courseDescUpdatedAt.Default.(func() time.Time)
	// course.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	course.UpdateDefaultUpdatedAt = courseDescUpdatedAt.UpdateDefault.(func() time.Time)
	// courseDescColour is the schema descriptor for colour field.
	courseDescColour := courseFields[2].Descriptor()
	// course.DefaultColour holds the default value on creation for the colour field.
	course.DefaultColour = courseDescColour.Default.(string)
	// course.ColourValidator is a validator for the "colour" field. It is called by the builders before save.
	course.ColourValidator = courseDescColour.Validators[0].(func(string) error)
	// courseDescID is the schema descriptor for id field.
	courseDescID := courseMixinFields0[0].Descriptor()
	// course.DefaultID holds the default value on creation for the id field.
	course.DefaultID = courseDescID.Default.(func() uuid.UUID)
	groupMixin := schema.Group{}.Mixin()
	groupMixinFields0 := groupMixin[0].Fields()
	_ = groupMixinFields0
	groupFields := schema.Group{}.Fields()
	_ = groupFields
	// groupDescCreatedAt is the schema descriptor for created_at field.
	groupDescCreatedAt := groupMixinFields0[1].Descriptor()
	// group.DefaultCreatedAt holds the default value on creation for the created_at field.
	group.DefaultCreatedAt = groupDescCreatedAt.Default.(func() time.Time)
	// groupDescUpdatedAt is the schema descriptor for updated_at field.
	groupDescUpdatedAt := groupMixinFields0[2].Descriptor()
	// group.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	group.DefaultUpdatedAt = groupDescUpdatedAt.Default.(func() time.Time)
	// group.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	group.UpdateDefaultUpdatedAt = groupDescUpdatedAt.UpdateDefault.(func() time.Time)
	// groupDescName is the schema descriptor for name field.
	groupDescName := groupFields[0].Descriptor()
	// group.NameValidator is a validator for the "name" field. It is called by the builders before save.
	group.NameValidator = groupDescName.Validators[0].(func(string) error)
	// groupDescID is the schema descriptor for id field.
	groupDescID := groupMixinFields0[0].Descriptor()
	// group.DefaultID holds the default value on creation for the id field.
	group.DefaultID = groupDescID.Default.(func() uuid.UUID)
	grouprunMixin := schema.GroupRun{}.Mixin()
	grouprunMixinFields0 := grouprunMixin[0].Fields()
	_ = grouprunMixinFields0
	grouprunFields := schema.GroupRun{}.Fields()
	_ = grouprunFields
	// grouprunDescCreatedAt is the schema descriptor for created_at field.
	grouprunDescCreatedAt := grouprunMixinFields0[1].Descriptor()
	// grouprun.DefaultCreatedAt holds the default value on creation for the created_at field.
	grouprun.DefaultCreatedAt = grouprunDescCreatedAt.Default.(func() time.Time)
	// grouprunDescUpdatedAt is the schema descriptor for updated_at field.
	grouprunDescUpdatedAt := grouprunMixinFields0[2].Descriptor()
	// grouprun.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	grouprun.DefaultUpdatedAt = grouprunDescUpdatedAt.Default.(func() time.Time)
	// grouprun.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	grouprun.UpdateDefaultUpdatedAt = grouprunDescUpdatedAt.UpdateDefault.(func() time.Time)
	// grouprunDescID is the schema descriptor for id field.
	grouprunDescID := grouprunMixinFields0[0].Descriptor()
	// grouprun.DefaultID holds the default value on creation for the id field.
	grouprun.DefaultID = grouprunDescID.Default.(func() uuid.UUID)
	userMixin := schema.User{}.Mixin()
	userMixinFields0 := userMixin[0].Fields()
	_ = userMixinFields0
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescCreatedAt is the schema descriptor for created_at field.
	userDescCreatedAt := userMixinFields0[1].Descriptor()
	// user.DefaultCreatedAt holds the default value on creation for the created_at field.
	user.DefaultCreatedAt = userDescCreatedAt.Default.(func() time.Time)
	// userDescUpdatedAt is the schema descriptor for updated_at field.
	userDescUpdatedAt := userMixinFields0[2].Descriptor()
	// user.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	user.DefaultUpdatedAt = userDescUpdatedAt.Default.(func() time.Time)
	// user.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	user.UpdateDefaultUpdatedAt = userDescUpdatedAt.UpdateDefault.(func() time.Time)
	// userDescID is the schema descriptor for id field.
	userDescID := userMixinFields0[0].Descriptor()
	// user.DefaultID holds the default value on creation for the id field.
	user.DefaultID = userDescID.Default.(func() uuid.UUID)
}
